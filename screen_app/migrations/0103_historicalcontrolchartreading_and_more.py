# Generated by Django 5.1.5 on 2025-01-20 07:28

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "screen_app",
            "0102_pchartdata_lcl_c_pchartdata_lcl_np_pchartdata_lcl_p_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalControlChartReading",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField(db_index=True)),
                ("reading1", models.FloatField()),
                ("reading2", models.FloatField()),
                ("reading3", models.FloatField()),
                ("reading4", models.FloatField()),
                ("reading5", models.FloatField()),
                (
                    "usl",
                    models.FloatField(
                        default=375,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "lsl",
                    models.FloatField(
                        default=355,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical control chart reading",
                "verbose_name_plural": "historical control chart readings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalControlChartStatistics",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField(db_index=True)),
                ("x_bar", models.FloatField()),
                ("r", models.FloatField()),
                ("usl", models.FloatField(default=375)),
                ("lsl", models.FloatField(default=355)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical control chart statistics",
                "verbose_name_plural": "historical control chart statisticss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDailyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "station",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        default="DSL01_S01",
                        max_length=100,
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(blank=True, default="QSF-13-06", max_length=20),
                ),
                ("rev_number", models.CharField(default="02", max_length=10)),
                ("rev_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "machine_name",
                    models.CharField(
                        choices=[
                            ("tsc_01", "TSC 01"),
                            ("tsc_02", "TSC 02"),
                            ("tsc_04", "TSC 04"),
                            ("tsc_05", "TSC 05"),
                            ("tsc_09", "TSC 09"),
                            ("ebe_01", "EBE 01"),
                            ("csl_01", "CSL 01"),
                            ("dtr_03", "DTR 03"),
                            ("dtr_05", "DTR 05"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "control_number",
                    models.CharField(
                        choices=[
                            ("51-00-4283-3", "51-00-4283-3"),
                            ("51-00-2603-3", "51-00-2603-3"),
                            ("51-00-1466-3", "51-00-1466-3"),
                            ("57-00-2141-3", "57-00-2141-3"),
                            ("57-00-1891-3", "57-00-1891-3"),
                            ("56-00-1702-3", "56-00-1702-3"),
                            ("56-00-2461-2", "56-00-2461-2"),
                            ("56-00-1019-2", "56-00-1019-2"),
                            ("56-00-1454-2", "56-00-1454-2"),
                            ("56-00-1737-3", "56-00-1737-3"),
                            ("56-00-2305-3", "56-00-2305-3"),
                            ("51-00-2305-3", "51-00-2305-3"),
                            ("51-00-3585-3", "51-00-3585-3"),
                            ("51-00-2629-3", "51-00-2629-3"),
                            ("57-00-1578-3", "57-00-1578-3"),
                            ("57-00-1579-3", "57-00-1579-3"),
                            ("51-00-3228-3", "51-00-3228-3"),
                            ("56-00-2450-3", "56-00-2450-3"),
                            ("52-00-1035-1", "52-00-1035-1"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "check_point_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean Machine Surface", "Clean Machine Surface"),
                            ("Check ON/OFF Switch", "Check ON/OFF Switch"),
                            ("Check Emergency Switch", "Check Emergency Switch"),
                            (
                                "Check any Abnormal Sound in M/C",
                                "Check any Abnormal Sound in M/C",
                            ),
                            ("Check Spray Nozzle", "Check Spray Nozzle"),
                            (
                                "Check all Tubbing & Feeder pipe",
                                "Check all Tubbing & Feeder pipe",
                            ),
                            (
                                "Check Maintenance & Calibration Tag",
                                "Check Maintenance & Calibration Tag",
                            ),
                        ],
                        default="Clean Machine Surface",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean Machine Surface", "Clean Machine Surface"),
                            ("Check ON/OFF Switch", "Check ON/OFF Switch"),
                            ("Check Emergency Switch", "Check Emergency Switch"),
                            (
                                "Check any Abnormal Sound in M/C",
                                "Check any Abnormal Sound in M/C",
                            ),
                            ("Check Spray Nozzle", "Check Spray Nozzle"),
                            (
                                "Check all Tubbing & Feeder pipe",
                                "Check all Tubbing & Feeder pipe",
                            ),
                            (
                                "Check Maintenance & Calibration Tag",
                                "Check Maintenance & Calibration Tag",
                            ),
                        ],
                        default="Check ON/OFF Switch",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean Machine Surface", "Clean Machine Surface"),
                            ("Check ON/OFF Switch", "Check ON/OFF Switch"),
                            ("Check Emergency Switch", "Check Emergency Switch"),
                            (
                                "Check any Abnormal Sound in M/C",
                                "Check any Abnormal Sound in M/C",
                            ),
                            ("Check Spray Nozzle", "Check Spray Nozzle"),
                            (
                                "Check all Tubbing & Feeder pipe",
                                "Check all Tubbing & Feeder pipe",
                            ),
                            (
                                "Check Maintenance & Calibration Tag",
                                "Check Maintenance & Calibration Tag",
                            ),
                        ],
                        default="Check Emergency Switch",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean Machine Surface", "Clean Machine Surface"),
                            ("Check ON/OFF Switch", "Check ON/OFF Switch"),
                            ("Check Emergency Switch", "Check Emergency Switch"),
                            (
                                "Check any Abnormal Sound in M/C",
                                "Check any Abnormal Sound in M/C",
                            ),
                            ("Check Spray Nozzle", "Check Spray Nozzle"),
                            (
                                "Check all Tubbing & Feeder pipe",
                                "Check all Tubbing & Feeder pipe",
                            ),
                            (
                                "Check Maintenance & Calibration Tag",
                                "Check Maintenance & Calibration Tag",
                            ),
                        ],
                        default="Check any Abnormal Sound in M/C",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean Machine Surface", "Clean Machine Surface"),
                            ("Check ON/OFF Switch", "Check ON/OFF Switch"),
                            ("Check Emergency Switch", "Check Emergency Switch"),
                            (
                                "Check any Abnormal Sound in M/C",
                                "Check any Abnormal Sound in M/C",
                            ),
                            ("Check Spray Nozzle", "Check Spray Nozzle"),
                            (
                                "Check all Tubbing & Feeder pipe",
                                "Check all Tubbing & Feeder pipe",
                            ),
                            (
                                "Check Maintenance & Calibration Tag",
                                "Check Maintenance & Calibration Tag",
                            ),
                        ],
                        default="Check Spray Nozzle",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean Machine Surface", "Clean Machine Surface"),
                            ("Check ON/OFF Switch", "Check ON/OFF Switch"),
                            ("Check Emergency Switch", "Check Emergency Switch"),
                            (
                                "Check any Abnormal Sound in M/C",
                                "Check any Abnormal Sound in M/C",
                            ),
                            ("Check Spray Nozzle", "Check Spray Nozzle"),
                            (
                                "Check all Tubbing & Feeder pipe",
                                "Check all Tubbing & Feeder pipe",
                            ),
                            (
                                "Check Maintenance & Calibration Tag",
                                "Check Maintenance & Calibration Tag",
                            ),
                        ],
                        default="Check all Tubbing & Feeder pipe",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean Machine Surface", "Clean Machine Surface"),
                            ("Check ON/OFF Switch", "Check ON/OFF Switch"),
                            ("Check Emergency Switch", "Check Emergency Switch"),
                            (
                                "Check any Abnormal Sound in M/C",
                                "Check any Abnormal Sound in M/C",
                            ),
                            ("Check Spray Nozzle", "Check Spray Nozzle"),
                            (
                                "Check all Tubbing & Feeder pipe",
                                "Check all Tubbing & Feeder pipe",
                            ),
                            (
                                "Check Maintenance & Calibration Tag",
                                "Check Maintenance & Calibration Tag",
                            ),
                        ],
                        default="Check Maintenance & Calibration Tag",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Proper Clean", "Proper Clean"),
                            ("Proper Working", "Proper Working"),
                            ("Proper Working", "Proper Working"),
                            ("No any Abnormal Sound", "No any Abnormal Sound"),
                            ("No Blockage No leakage", "No Blockage No leakage"),
                            ("No Cut & No Damage", "No Cut & No Damage"),
                            ("No Expiry date on tag", "No Expiry date on tag"),
                        ],
                        default="Proper Clean",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Proper Clean", "Proper Clean"),
                            ("Proper Working", "Proper Working"),
                            ("Proper Working", "Proper Working"),
                            ("No any Abnormal Sound", "No any Abnormal Sound"),
                            ("No Blockage No leakage", "No Blockage No leakage"),
                            ("No Cut & No Damage", "No Cut & No Damage"),
                            ("No Expiry date on tag", "No Expiry date on tag"),
                        ],
                        default="Proper Working",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Proper Clean", "Proper Clean"),
                            ("Proper Working", "Proper Working"),
                            ("Proper Working", "Proper Working"),
                            ("No any Abnormal Sound", "No any Abnormal Sound"),
                            ("No Blockage No leakage", "No Blockage No leakage"),
                            ("No Cut & No Damage", "No Cut & No Damage"),
                            ("No Expiry date on tag", "No Expiry date on tag"),
                        ],
                        default="Proper Working",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Proper Clean", "Proper Clean"),
                            ("Proper Working", "Proper Working"),
                            ("Proper Working", "Proper Working"),
                            ("No any Abnormal Sound", "No any Abnormal Sound"),
                            ("No Blockage No leakage", "No Blockage No leakage"),
                            ("No Cut & No Damage", "No Cut & No Damage"),
                            ("No Expiry date on tag", "No Expiry date on tag"),
                        ],
                        default="No any Abnormal Sound",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Proper Clean", "Proper Clean"),
                            ("Proper Working", "Proper Working"),
                            ("Proper Working", "Proper Working"),
                            ("No any Abnormal Sound", "No any Abnormal Sound"),
                            ("No Blockage No leakage", "No Blockage No leakage"),
                            ("No Cut & No Damage", "No Cut & No Damage"),
                            ("No Expiry date on tag", "No Expiry date on tag"),
                        ],
                        default="No Blockage No leakage",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Proper Clean", "Proper Clean"),
                            ("Proper Working", "Proper Working"),
                            ("Proper Working", "Proper Working"),
                            ("No any Abnormal Sound", "No any Abnormal Sound"),
                            ("No Blockage No leakage", "No Blockage No leakage"),
                            ("No Cut & No Damage", "No Cut & No Damage"),
                            ("No Expiry date on tag", "No Expiry date on tag"),
                        ],
                        default="No Cut & No Damage",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Proper Clean", "Proper Clean"),
                            ("Proper Working", "Proper Working"),
                            ("Proper Working", "Proper Working"),
                            ("No any Abnormal Sound", "No any Abnormal Sound"),
                            ("No Blockage No leakage", "No Blockage No leakage"),
                            ("No Cut & No Damage", "No Cut & No Damage"),
                            ("No Expiry date on tag", "No Expiry date on tag"),
                        ],
                        default="No Expiry date on tag",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="Clean by Cloths & Brush",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Hand",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Hand",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Eye",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Eye",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Eye",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Eye",
                        max_length=200,
                    ),
                ),
                (
                    "Remark_1",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_2",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_3",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_4",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_5",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_6",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_7",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Maintenance Checklist For Daily ",
                "verbose_name_plural": "historical Maintenance Checklists For Daily",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFixtureCleaningRecord",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "station",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        default="DSL01_S01",
                        max_length=100,
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(blank=True, default="QSF-12-15", max_length=20),
                ),
                ("month_year", models.DateField()),
                (
                    "shift",
                    models.CharField(choices=[("A", "A"), ("B", "B")], max_length=1),
                ),
                (
                    "fixture_location",
                    models.CharField(
                        choices=[
                            ("visual_inspection", "Visual Inspection"),
                            ("programming_testing", "Programming & Testing"),
                            ("function_testing", "Function Testing"),
                            ("adhesive_application", "Adhesive Application"),
                            ("conformal_coating", "Conformal Coating"),
                            ("housing", "Housing"),
                            ("e90fl", "E90FL"),
                            ("dr_beck_epoxy", "Dr. Beck Epoxy"),
                            ("final_testing", "Final Testing"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "fixture_control_no",
                    models.CharField(
                        choices=[
                            ("51-00-4283-3", "51-00-4283-3"),
                            ("51-00-2603-3", "51-00-2603-3"),
                            ("51-00-1466-3", "51-00-1466-3"),
                            ("57-00-2141-3", "57-00-2141-3"),
                            ("57-00-1891-3", "57-00-1891-3"),
                            ("56-00-1702-3", "56-00-1702-3"),
                            ("56-00-2461-2", "56-00-2461-2"),
                            ("56-00-1019-2", "56-00-1019-2"),
                            ("56-00-1454-2", "56-00-1454-2"),
                            ("56-00-1737-3", "56-00-1737-3"),
                            ("56-00-2305-3", "56-00-2305-3"),
                            ("51-00-2305-3", "51-00-2305-3"),
                            ("51-00-3585-3", "51-00-3585-3"),
                            ("51-00-2629-3", "51-00-2629-3"),
                            ("57-00-1578-3", "57-00-1578-3"),
                            ("57-00-1579-3", "57-00-1579-3"),
                            ("51-00-3228-3", "51-00-3228-3"),
                            ("56-00-2450-3", "56-00-2450-3"),
                            ("52-00-1035-1", "52-00-1035-1"),
                        ],
                        max_length=200,
                    ),
                ),
                ("fixture_installation_date", models.DateField()),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "verification_tag_available",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "verification_tag_condition",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "no_dust_on_fixture",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "no_epoxy_coating_on_fixture",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "operator_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=1,
                    ),
                ),
                (
                    "supervisor_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=1,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Fixture Cleaning Record",
                "verbose_name_plural": "historical Fixture Cleaning Records",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMonthlyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "station",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(blank=True, default="QSF-13-06", max_length=20),
                ),
                ("rev_number", models.CharField(default="02", max_length=10)),
                ("rev_date", models.DateField(default="2022-12-31")),
                (
                    "machine_name",
                    models.CharField(
                        choices=[
                            ("tsc_01", "TSC 01"),
                            ("tsc_02", "TSC 02"),
                            ("tsc_04", "TSC 04"),
                            ("tsc_05", "TSC 05"),
                            ("tsc_09", "TSC 09"),
                            ("ebe_01", "EBE 01"),
                            ("csl_01", "CSL 01"),
                            ("dtr_03", "DTR 03"),
                            ("dtr_05", "DTR 05"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "control_number",
                    models.CharField(
                        choices=[
                            ("51-00-4283-3", "51-00-4283-3"),
                            ("51-00-2603-3", "51-00-2603-3"),
                            ("51-00-1466-3", "51-00-1466-3"),
                            ("57-00-2141-3", "57-00-2141-3"),
                            ("57-00-1891-3", "57-00-1891-3"),
                            ("56-00-1702-3", "56-00-1702-3"),
                            ("56-00-2461-2", "56-00-2461-2"),
                            ("56-00-1019-2", "56-00-1019-2"),
                            ("56-00-1454-2", "56-00-1454-2"),
                            ("56-00-1737-3", "56-00-1737-3"),
                            ("56-00-2305-3", "56-00-2305-3"),
                            ("51-00-2305-3", "51-00-2305-3"),
                            ("51-00-3585-3", "51-00-3585-3"),
                            ("51-00-2629-3", "51-00-2629-3"),
                            ("57-00-1578-3", "57-00-1578-3"),
                            ("57-00-1579-3", "57-00-1579-3"),
                            ("51-00-3228-3", "51-00-3228-3"),
                            ("56-00-2450-3", "56-00-2450-3"),
                            ("52-00-1035-1", "52-00-1035-1"),
                        ],
                        max_length=100,
                    ),
                ),
                ("month_year", models.DateField(default=django.utils.timezone.now)),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "check_point_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Check Machine Earthing (Leakage Voltage)",
                                "Check Machine Earthing (Leakage Voltage)",
                            ),
                            ("Check all parameter", "Check all parameter"),
                            ("Check Working condition", "Check Working condition"),
                            (
                                "Check Operation of Sensors",
                                "Check Operation of Sensors",
                            ),
                            (
                                "Check condition of all fixture",
                                "Check condition of all fixture",
                            ),
                        ],
                        default="Check Machine Earthing (Leakage Voltage)",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("< 2 V", "< 2 V"),
                            ("Condition Proper", "Condition Proper"),
                            ("Condition Proper", "Condition Proper"),
                            ("Proper Condition", "Proper Condition"),
                        ],
                        default="< 2 V",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("By Parameter", "By Parameter"),
                            ("By Condition", "By Condition"),
                            ("By Condition", "By Condition"),
                            ("By Fixture", "By Fixture"),
                        ],
                        default="By Parameter",
                        max_length=200,
                    ),
                ),
                (
                    "Remark_12",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="",
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical monthly checklist item",
                "verbose_name_plural": "historical monthly checklist items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPChartData",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[
                            ("visual_inspection", "Visual Inspection"),
                            ("programming_testing", "Programming & Testing"),
                            ("function_testing", "Function Testing"),
                            ("adhesive_application", "Adhesive Application"),
                            ("conformal_coating", "Conformal Coating"),
                            ("housing", "Housing"),
                            ("e90fl", "E90FL"),
                            ("dr_beck_epoxy", "Dr. Beck Epoxy"),
                            ("final_testing", "Final Testing"),
                        ],
                        max_length=200,
                    ),
                ),
                ("part_number_and_name", models.CharField(max_length=200)),
                (
                    "operation_number_and_stage_name",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        max_length=200,
                    ),
                ),
                ("department", models.CharField(max_length=100)),
                ("month", models.DateField(default=django.utils.timezone.now)),
                (
                    "date_control_limits_calculated",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("average_sample_size", models.IntegerField()),
                ("frequency", models.IntegerField()),
                ("sample_size", models.IntegerField()),
                ("nonconforming_units", models.IntegerField()),
                ("proportion", models.FloatField(blank=True, null=True)),
                ("ucl_p", models.FloatField(blank=True, null=True)),
                ("lcl_p", models.FloatField(blank=True, null=True)),
                ("ucl_np", models.FloatField(blank=True, null=True)),
                ("lcl_np", models.FloatField(blank=True, null=True)),
                ("ucl_c", models.FloatField(blank=True, null=True)),
                ("lcl_c", models.FloatField(blank=True, null=True)),
                ("ucl_u", models.FloatField(blank=True, null=True)),
                ("lcl_u", models.FloatField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical p chart data",
                "verbose_name_plural": "historical p chart datas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRejectionSheet",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "station",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        default="DSL01_S01",
                        max_length=100,
                    ),
                ),
                (
                    "month",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "part_description",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        max_length=250,
                    ),
                ),
                (
                    "opening_balance",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "receive_from_rework",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "total_pass_qty",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "total_rejection_qty",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "closing_balance",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "operator_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=1,
                    ),
                ),
                (
                    "verified_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=1,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Rejection Sheet",
                "verbose_name_plural": "historical Rejection Sheets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSolderingBitRecord",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("station", models.CharField(default="DSL01_S01", max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True,
                        default="Doc-QSF-12-15",
                        max_length=50,
                        verbose_name="Doc. No.",
                    ),
                ),
                (
                    "part_name",
                    models.CharField(
                        choices=[
                            ("tsc_01", "TSC 01"),
                            ("tsc_02", "TSC 02"),
                            ("tsc_04", "TSC 04"),
                            ("tsc_05", "TSC 05"),
                            ("tsc_09", "TSC 09"),
                            ("ebe_01", "EBE 01"),
                            ("csl_01", "CSL 01"),
                            ("dtr_03", "DTR 03"),
                            ("dtr_05", "DTR 05"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "machine_location",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        max_length=150,
                    ),
                ),
                (
                    "month",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                ("soldering_points_per_part", models.IntegerField(default=10)),
                (
                    "bit_size",
                    models.CharField(
                        choices=[("20d", "20D"), ("30d", "30D")], max_length=50
                    ),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "produce_quantity_shift_a",
                    models.IntegerField(verbose_name="Produce Quantity Shift A"),
                ),
                (
                    "produce_quantity_shift_b",
                    models.IntegerField(verbose_name="Produce Quantity Shift B"),
                ),
                (
                    "total_quantity",
                    models.IntegerField(
                        default=500, verbose_name="Total Quantity (Both shifts)"
                    ),
                ),
                (
                    "total_soldering_points",
                    models.IntegerField(
                        default=500, verbose_name="Total Soldering points/day"
                    ),
                ),
                (
                    "bit_life_remaining",
                    models.IntegerField(
                        default=500, verbose_name="Bit Life Remaining (Parts in Nos.)"
                    ),
                ),
                ("bit_change_date", models.DateField(verbose_name="Bit Change Date")),
                (
                    "prepared_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "approved_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_no",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Robotic Soldering Bit Replacement Record",
                "verbose_name_plural": "historical Robotic Soldering Bit Replacement Records",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStartUpCheckSheet",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("revision_no", models.IntegerField(verbose_name="Rev. No.")),
                (
                    "effective_date",
                    models.DateField(
                        blank=True,
                        default=django.utils.timezone.now,
                        verbose_name="Eff. Date",
                    ),
                ),
                (
                    "month",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "checkpoint_1",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 1",
                    ),
                ),
                (
                    "checkpoint_2",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 2",
                    ),
                ),
                (
                    "checkpoint_3",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 3",
                    ),
                ),
                (
                    "checkpoint_4",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 4",
                    ),
                ),
                (
                    "checkpoint_5",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 5",
                    ),
                ),
                (
                    "checkpoint_6",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 6",
                    ),
                ),
                (
                    "checkpoint_7",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 7",
                    ),
                ),
                (
                    "checkpoint_8",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 8",
                    ),
                ),
                (
                    "checkpoint_9",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 9",
                    ),
                ),
                (
                    "checkpoint_10",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 10",
                    ),
                ),
                (
                    "checkpoint_11",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 11",
                    ),
                ),
                (
                    "checkpoint_12",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 12",
                    ),
                ),
                (
                    "checkpoint_13",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 13",
                    ),
                ),
                (
                    "checkpoint_14",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 14",
                    ),
                ),
                (
                    "checkpoint_15",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 15",
                    ),
                ),
                (
                    "checkpoint_16",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 16",
                    ),
                ),
                (
                    "checkpoint_17",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 17",
                    ),
                ),
                (
                    "checkpoint_18",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 18",
                    ),
                ),
                (
                    "checkpoint_19",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 19",
                    ),
                ),
                (
                    "checkpoint_20",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 20",
                    ),
                ),
                (
                    "checkpoint_21",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 21",
                    ),
                ),
                (
                    "checkpoint_22",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 22",
                    ),
                ),
                (
                    "checkpoint_23",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 23",
                    ),
                ),
                (
                    "checkpoint_24",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 24",
                    ),
                ),
                (
                    "checkpoint_25",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 25",
                    ),
                ),
                (
                    "verified_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        default="✘",
                        max_length=1,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_operation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Start Up Check Sheet",
                "verbose_name_plural": "historical Start Up Check Sheets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWeeklyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "station",
                    models.CharField(
                        choices=[
                            ("DSL01_S01", "DSL01_S01"),
                            ("DSL01_S02", "DSL01_S02"),
                            ("DSL01_S03", "DSL01_S03"),
                            ("DSL01_S04", "DSL01_S04"),
                            ("DSL01_S05", "DSL01_S05"),
                            ("DSL01_S06", "DSL01_S06"),
                            ("DSL01_S07", "DSL01_S07"),
                            ("DSL01_S08", "DSL01_S08"),
                            ("DSL01_S09", "DSL01_S09"),
                        ],
                        default="DSL01_S01",
                        max_length=10,
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(blank=True, default="QSF-13-06", max_length=20),
                ),
                ("rev_number", models.CharField(default="02", max_length=10)),
                ("rev_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "machine_name",
                    models.CharField(
                        choices=[
                            ("tsc_01", "TSC 01"),
                            ("tsc_02", "TSC 02"),
                            ("tsc_04", "TSC 04"),
                            ("tsc_05", "TSC 05"),
                            ("tsc_09", "TSC 09"),
                            ("ebe_01", "EBE 01"),
                            ("csl_01", "CSL 01"),
                            ("dtr_03", "DTR 03"),
                            ("dtr_05", "DTR 05"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "control_number",
                    models.CharField(
                        choices=[
                            ("51-00-4283-3", "51-00-4283-3"),
                            ("51-00-2603-3", "51-00-2603-3"),
                            ("51-00-1466-3", "51-00-1466-3"),
                            ("57-00-2141-3", "57-00-2141-3"),
                            ("57-00-1891-3", "57-00-1891-3"),
                            ("56-00-1702-3", "56-00-1702-3"),
                            ("56-00-2461-2", "56-00-2461-2"),
                            ("56-00-1019-2", "56-00-1019-2"),
                            ("56-00-1454-2", "56-00-1454-2"),
                            ("56-00-1737-3", "56-00-1737-3"),
                            ("56-00-2305-3", "56-00-2305-3"),
                            ("51-00-2305-3", "51-00-2305-3"),
                            ("51-00-3585-3", "51-00-3585-3"),
                            ("51-00-2629-3", "51-00-2629-3"),
                            ("57-00-1578-3", "57-00-1578-3"),
                            ("57-00-1579-3", "57-00-1579-3"),
                            ("51-00-3228-3", "51-00-3228-3"),
                            ("56-00-2450-3", "56-00-2450-3"),
                            ("52-00-1035-1", "52-00-1035-1"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "check_point_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Check Conveyor Belts", "Check Conveyor Belts"),
                            (
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                            ),
                            ("Check Wire & Cable", "Check Wire & Cable"),
                            ("Electrical Insulation", "Electrical Insulation"),
                        ],
                        default="Check Conveyor Belts",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Check Conveyor Belts", "Check Conveyor Belts"),
                            (
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                            ),
                            ("Check Wire & Cable", "Check Wire & Cable"),
                            ("Electrical Insulation", "Electrical Insulation"),
                        ],
                        default="Check Solder bit Assembly. For any Bolts & Screw Loose",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Check Conveyor Belts", "Check Conveyor Belts"),
                            (
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                            ),
                            ("Check Wire & Cable", "Check Wire & Cable"),
                            ("Electrical Insulation", "Electrical Insulation"),
                        ],
                        default="Check Wire & Cable",
                        max_length=200,
                    ),
                ),
                (
                    "check_point_11",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Check Conveyor Belts", "Check Conveyor Belts"),
                            (
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                                "Check Solder bit Assembly. For any Bolts & Screw Loose",
                            ),
                            ("Check Wire & Cable", "Check Wire & Cable"),
                            ("Electrical Insulation", "Electrical Insulation"),
                        ],
                        default="Electrical Insulation",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Damage", "No Damage"),
                            ("Proper Tight", "Proper Tight"),
                            ("No Damage No Broken", "No Damage No Broken"),
                            ("No Cut & No Damage Wire", "No Cut & No Damage Wire"),
                        ],
                        default="No Damage",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Damage", "No Damage"),
                            ("Proper Tight", "Proper Tight"),
                            ("No Damage No Broken", "No Damage No Broken"),
                            ("No Cut & No Damage Wire", "No Cut & No Damage Wire"),
                        ],
                        default="Proper Tight",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Damage", "No Damage"),
                            ("Proper Tight", "Proper Tight"),
                            ("No Damage No Broken", "No Damage No Broken"),
                            ("No Cut & No Damage Wire", "No Cut & No Damage Wire"),
                        ],
                        default="No Damage No Broken",
                        max_length=200,
                    ),
                ),
                (
                    "requirement_range_11",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Damage", "No Damage"),
                            ("Proper Tight", "Proper Tight"),
                            ("No Damage No Broken", "No Damage No Broken"),
                            ("No Cut & No Damage Wire", "No Cut & No Damage Wire"),
                        ],
                        default="No Cut & No Damage Wire",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Hand",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Hand",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Hand",
                        max_length=200,
                    ),
                ),
                (
                    "method_of_checking_11",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Clean by Cloths & Brush", "Clean by Cloths & Brush"),
                            ("By Hand", "By Hand"),
                            ("By Eye", "By Eye"),
                        ],
                        default="By Hand",
                        max_length=200,
                    ),
                ),
                (
                    "Remark_8",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_9",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_10",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_11",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical weekly checklist item",
                "verbose_name_plural": "historical weekly checklist items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
